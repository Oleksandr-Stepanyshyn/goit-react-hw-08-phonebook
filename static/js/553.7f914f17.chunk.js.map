{"version":3,"file":"static/js/553.7f914f17.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CssBaseline/CssBaseline.js","views/RegisterView.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { useForm } from 'react-hook-form';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â© '}\n      PhoneBook\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function RegisterView() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(authOperations.register(data));\n    reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                autoFocus\n                {...register('name', { required: 'Name required' })}\n              />\n            </Grid>\n\n            {errors.name?.message === 'Name required' && (\n              <Grid\n                container\n                justifyContent=\"flex-start\"\n                paddingLeft=\"20px\"\n                color=\"red\"\n              >\n                {errors.name?.message}\n              </Grid>\n            )}\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                {...register('email', { required: 'Email required' })}\n              />\n            </Grid>\n\n            {errors.email?.message === 'Email required' && (\n              <Grid\n                container\n                justifyContent=\"flex-start\"\n                paddingLeft=\"20px\"\n                color=\"red\"\n              >\n                {errors.email?.message}\n              </Grid>\n            )}\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                {...register('password', {\n                  required: 'Password required',\n                })}\n              />\n            </Grid>\n\n            {errors.password?.message === 'Password required' && (\n              <Grid\n                container\n                justifyContent=\"flex-start\"\n                paddingLeft=\"20px\"\n                color=\"red\"\n              >\n                {errors.password?.message}\n              </Grid>\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Register\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\">Already have an account? Login</Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      <Copyright sx={{ mt: 5 }} />\n    </Container>\n  );\n}\n"],"names":["html","theme","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","palette","mode","body","color","vars","text","primary","typography","body1","backgroundColor","background","default","common","white","inProps","props","useThemeProps","name","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","Copyright","Typography","variant","align","Date","getFullYear","RegisterView","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","noValidate","onSubmit","data","authOperations","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","id","label","autoFocus","message","justifyContent","paddingLeft","email","type","password","Button","mb","to"],"sourceRoot":""}