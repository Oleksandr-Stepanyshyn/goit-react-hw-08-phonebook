{"version":3,"file":"static/js/29.c86e1599.chunk.js","mappings":"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","sources":["hooks/useContacts.js","components/ContactsForm/ContactsForm.jsx","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/BasicModal/BasicModal.jsx","views/ContactsView.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nexport const useContacts = () => {\n  const [filter, setFilter] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetch());\n  }, [dispatch]);\n\n  const addContact = contact => {\n    const { name } = contact;\n\n    const currentName = name.toLowerCase();\n    const matchName = contacts.some(\n      ({ name }) => name.toLowerCase() === currentName\n    );\n\n    matchName\n      ? toast.warn(`${name} is already in contacts`, {\n          position: 'top-center',\n          autoClose: 3000,\n        })\n      : dispatch(contactsOperations.add(contact));\n  };\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return (\n      contacts?.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      ) ?? []\n    );\n  }, [contacts, filter]);\n\n  return { filter, setFilter, filteredContacts, addContact };\n};\n","import PropTypes from 'prop-types';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useForm } from 'react-hook-form';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useContacts } from 'hooks/useContacts';\n\nconst validateValue = {\n  name: {\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    message:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    pattern: /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/,\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(validateValue.name.pattern, {\n      message: validateValue.name.message,\n    })\n    .required(),\n  number: yup\n    .string()\n    .matches(validateValue.number.pattern, {\n      message: validateValue.number.message,\n    })\n    .required(),\n});\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      mobile: 0,\n      tablet: 768,\n      desktop: 1200,\n    },\n  },\n});\n\nconst style = {\n  width: {\n    tablet: 320,\n    desktop: 400,\n  },\n  height: 1,\n  border: {\n    tablet: '1px solid rgba(0,0,0,0.3)',\n  },\n  borderRadius: 2,\n  m: {\n    tablet: 2,\n    desktop: 3,\n  },\n};\n\nexport const ContactsForm = ({ textBtn, handleClose }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const { addContact } = useContacts();\n\n  const onSubmit = data => {\n    addContact(data);\n\n    reset();\n    handleClose();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"div\" maxWidth=\"xs\" sx={style}>\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit(onSubmit)}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            error={errors.name?.type === 'matches'}\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"text\"\n            label=\"Name\"\n            autoComplete=\"name\"\n            autoFocus\n            helperText={errors.name?.message}\n            {...register('name', {\n              required: 'Name is required',\n            })}\n          />\n\n          <TextField\n            error={errors.number?.type === 'matches'}\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Phone number\"\n            type=\"text\"\n            autoComplete=\"current-number\"\n            helperText={errors.number?.message}\n            {...register('number', { required: 'Number is required' })}\n          />\n\n          <Grid container justifyContent=\"center\">\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {textBtn}\n            </Button>\n          </Grid>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nContactsForm.propTypes = {\n  textBtn: PropTypes.string.isRequired,\n  handleClose: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { MdDelete } from 'react-icons/md';\n\nexport const Contact = styled.a`\n  text-align: start;\n  font-weight: 600;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-start;\n  }\n`;\nexport const Name = styled.h4`\n  /* color: #1976d2; */\n`;\n\nexport const Phone = styled.p`\n  color: #1976d2;\n  font-weight: 500;\n  margin-top: 4px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 0;\n    margin-left: 12px;\n  }\n`;\n\nexport const Button = styled.button`\n  color: inherit;\n  cursor: pointer;\n  border: 0;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    color: #1976d2;\n    transition: color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  }\n`;\n\nexport const BtnContainer = styled.div`\n  display: flex;\n`;\n\nexport const DeleteIcon = styled(MdDelete)`\n  color: inherit;\n  width: 24px;\n  height: 24px;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { Button, Contact, DeleteIcon, Name, Phone } from './ContactCard.styled';\n\nexport const ContactCard = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(contactsSelectors.getIsLoading);\n\n  return (\n    <>\n      <Contact href={`tel: ${number}`}>\n        <Name>{name}</Name>\n        <Phone>{number}</Phone>\n      </Contact>\n\n      <Button\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => dispatch(contactsOperations.del(id))}\n      >\n        <DeleteIcon />\n      </Button>\n    </>\n  );\n};\n\nContactCard.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = ({ filter, setFilter }) => {\n  return (\n    <TextField\n      margin=\"normal\"\n      fullWidth\n      type=\"text\"\n      label=\"Search name\"\n      value={filter}\n      onChange={e => setFilter(e.target.value)}\n      sx={{ m: 0, p: 0, borderRadius: 10 }}\n    />\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Contacts = styled.div`\n  margin-top: 16px;\n  padding: 16px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin: 0 auto;\n    margin-top: 16px;\n    width: 440px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    margin-top: 24px;\n    width: 720px;\n  }\n`;\n\nexport const ContactHeader = styled.h3``;\n\nexport const List = styled.ul`\n  height: 80vh;\n  margin-top: 12px;\n  overflow-y: scroll;\n`;\n\nexport const Card = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n  padding-left: 12px;\n  border-radius: 8px;\n  background-color: rgba(0, 0, 0, 0.05);\n\n  & + & {\n    margin-top: 8px;\n  }\n`;\n","import { ContactCard } from 'components/ContactCard/ContactCard';\nimport { Filter } from 'components/Filter/Filter';\nimport { useContacts } from 'hooks/useContacts';\nimport { Card, Contacts, List } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const { filter, setFilter, filteredContacts } = useContacts();\n\n  return (\n    <Contacts>\n      <Filter setFilter={setFilter} filter={filter} />\n      <List>\n        {filteredContacts.map(contact => {\n          return (\n            <Card key={contact.id}>\n              <ContactCard contact={contact} />\n            </Card>\n          );\n        })}\n      </List>\n    </Contacts>\n  );\n};\n","import PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useState } from 'react';\nimport { ContactsForm } from 'components/ContactsForm/ContactsForm';\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      mobile: 0,\n      tablet: 768,\n      desktop: 1200,\n    },\n  },\n});\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: {\n    mobile: 300,\n    tablet: 420,\n  },\n  bgcolor: 'background.paper',\n  border: '2px solid #1976d2',\n  borderRadius: 2,\n  boxShadow: 24,\n};\n\nexport default function BasicModal({ textBtn }) {\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Button\n        onClick={handleOpen}\n        variant=\"outlined\"\n        size=\"small\"\n        sx={{ mt: 2 }}\n      >\n        {textBtn}\n      </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n        sx={{\n          p: 0,\n          m: 0,\n        }}\n      >\n        <Box sx={style}>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ textAlign: 'center' }}\n          >\n            {textBtn}\n          </Typography>\n          <ContactsForm handleClose={handleClose} textBtn={textBtn} />\n        </Box>\n      </Modal>\n    </ThemeProvider>\n  );\n}\n\nBasicModal.propTypes = {\n  textBtn: PropTypes.string.isRequired,\n};\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport BasicModal from 'components/BasicModal/BasicModal';\nimport { ContactsContainer, Container, Main } from 'components/Views.styled';\n\nexport default function ContactsView() {\n  const screenWidth = window.screen.width;\n\n  return (\n    <Main>\n      <Container>\n        <ContactsContainer>\n          {screenWidth < 768 ? (\n            <BasicModal textBtn={'Add contact'} />\n          ) : (\n            <ContactsForm textBtn={'Add contact'} />\n          )}\n          <ContactsList />\n        </ContactsContainer>\n      </Container>\n    </Main>\n  );\n}\n"],"names":["useContacts","useState","filter","setFilter","contacts","useSelector","contactsSelectors","dispatch","useDispatch","useEffect","contactsOperations","filteredContacts","useMemo","normalizedFilter","toLowerCase","trim","name","includes","addContact","contact","currentName","some","toast","position","autoClose","validateValue","pattern","message","schema","yup","shape","matches","required","number","theme","createTheme","breakpoints","values","mobile","tablet","desktop","style","width","height","border","borderRadius","m","ContactsForm","textBtn","handleClose","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","ThemeProvider","Container","component","maxWidth","sx","Box","onSubmit","data","noValidate","mt","TextField","error","type","margin","fullWidth","label","autoComplete","autoFocus","helperText","Grid","container","justifyContent","Button","variant","mb","Contact","styled","Name","Phone","DeleteIcon","MdDelete","ContactCard","id","isLoading","href","disabled","onClick","Filter","value","onChange","e","target","p","Contacts","List","Card","ContactsList","map","top","left","transform","bgcolor","boxShadow","BasicModal","open","setOpen","size","Modal","onClose","Typography","textAlign","ContactsView","screenWidth","window","screen"],"sourceRoot":""}